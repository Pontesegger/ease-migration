pipeline {

	agent any

    options {
        timestamps()
    }

    stages {
        stage('Checkout') {
            steps {
                checkout poll: false,
                scm: [$class: 'GitSCM',
                        branches: [[name: '*/master']],
                        doGenerateSubmoduleConfigurations: false,
                        extensions: [[$class: 'CleanCheckout']],
                        submoduleCfg: [],
                        userRemoteConfigs: [[url: 'git://git.eclipse.org/gitroot/ease/org.eclipse.ease.core.git']]
                    ]
            }
        }

        stage('Build') {
            steps {
	            withMaven(
	            	jdk: 'oracle-jdk8-latest',
	            	maven: 'apache-maven-latest',
	            	options: [openTasksPublisher(highPriorityTaskIdentifiers: 'FIXME', normalPriorityTaskIdentifiers: 'TODO', pattern: '*.java'),
	            				artifactsPublisher(disabled: true),
	            				findbugsPublisher()])
	            {
					sh 'mvn clean verify -f developers/org.eclipse.ease.helpgenerator/pom.xml'                     
                }
            }
        }
    }

    post {
        success {
            archiveArtifacts artifacts: 'developers/org.eclipse.ease.helpgenerator/target/ease.module.doclet.jar', fingerprint: true            
        }

        failure {
            emailext body: 'Build ${BUILD_URL} failed.', subject: '[EASE] ${JOB_NAME } failed', to: 'christian.pontesegger@web.de'
        }
    }
}